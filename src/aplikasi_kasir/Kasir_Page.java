package aplikasi_kasir;

import com.itextpdf.text.DocumentException;
import function.LoginController;
import function.User;
import java.awt.Font;
import java.io.FileOutputStream;
import java.awt.Graphics2D;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfTemplate;
import com.itextpdf.text.pdf.PdfWriter;
import function.LaporanController;
import function.RiwayatPenjualanController;
import java.sql.PreparedStatement;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import function.koneksi_database;
import java.io.FileNotFoundException;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

public class Kasir_Page extends javax.swing.JFrame {

    /**
     * Creates new form MainApp
     */
    private User user;

    public Kasir_Page(User user) { // Add User parameter to the constructor
        initComponents();
        Font font = new Font("Arial", Font.PLAIN, 18);
        tblCart.setFont(font);
        tblCart.setRowHeight(30);

        this.user = user; // Inisialisasi atribut user
        System.out.println(user);
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        System.out.println("User: " + user);
        if (user != null) {

            String namaUppercase = user.getNama().toUpperCase(); // Ubah nama menjadi uppercase
            labelkasir.setText(namaUppercase);
            String nama = user.getNama();
            String username = user.getUsername();

        } else {
            jLabel5.setText("Error: Data user tidak ditemukan.");
        }

        for (int i = 0; i < tblCart.getRowCount(); i++) {
            tblCart.setRowHeight(i, 30);
        }

        if (user != null) {
            labelkasir.setText(user.getNama().toUpperCase()); // Set the cashier's name
        } else {
            labelkasir.setText("Nama Kasir Tidak Ditemukan"); // Handle the case where user data is not available
        }

        // Tambahkan TableModelListener di sini
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        panelNota = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        daftarproduk = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        labeltotalharga = new javax.swing.JLabel();
        notatotalharga = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        labelkasir = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lblTotalHarga = new javax.swing.JLabel();
        buttonsimpan = new javax.swing.JButton();
        bayar = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCart = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Halaman Kasir");

        jPanel1.setBackground(new java.awt.Color(0, 102, 0));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("KODE PRODUK");

        jButton1.setText("LOGOUT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(102, 102, 102));
        jButton2.setText("MENU UTAMA");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(102, 102, 102));
        jButton4.setText("LAPORAN KEUANGAN");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("KASIR PAGE");

        jButton5.setBackground(new java.awt.Color(102, 102, 102));
        jButton5.setText("HAPUS PRODUK");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(102, 102, 102));
        jButton6.setText("CHECKOUT");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton3.setText("HAPUS SEMUA");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton8.setText("HAPUS DARI NOTA");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 121, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(36, 36, 36))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26))))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        panelNota.setBackground(new java.awt.Color(255, 255, 255));
        panelNota.setPreferredSize(new java.awt.Dimension(500, 457));

        daftarproduk.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "ID", "NAMA PRODUK", "QTY", "HARGA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(daftarproduk);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("TOKOKU");

        labeltotalharga.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labeltotalharga.setForeground(new java.awt.Color(0, 0, 0));
        labeltotalharga.setText("TOTAL HARGA            :");

        notatotalharga.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        notatotalharga.setForeground(new java.awt.Color(0, 0, 0));
        notatotalharga.setText("totalharga");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("UANG KEMBALI          :");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("totalkembali");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("jl. abcd No. 17 Tegal, Jawa Tengah");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("KASIR                :");

        labelkasir.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelkasir.setForeground(new java.awt.Color(0, 0, 0));
        labelkasir.setText("namakasir");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("TOTAL BAYAR             :");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("totalbayar");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("TERIMAKASIH TELAH BERBELANJA DI TOKO KAMI");

        javax.swing.GroupLayout panelNotaLayout = new javax.swing.GroupLayout(panelNota);
        panelNota.setLayout(panelNotaLayout);
        panelNotaLayout.setHorizontalGroup(
            panelNotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(panelNotaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelNotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelNotaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11))
                    .addGroup(panelNotaLayout.createSequentialGroup()
                        .addGroup(panelNotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelNotaLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelNotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(labelkasir, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(panelNotaLayout.createSequentialGroup()
                                .addComponent(labeltotalharga)
                                .addGap(18, 18, 18)
                                .addComponent(notatotalharga, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelNotaLayout.createSequentialGroup()
                                .addGap(165, 165, 165)
                                .addComponent(jLabel4))
                            .addGroup(panelNotaLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(panelNotaLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel13)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panelNotaLayout.setVerticalGroup(
            panelNotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelNotaLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addGap(22, 22, 22)
                .addGroup(panelNotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(labelkasir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelNotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(notatotalharga)
                    .addComponent(labeltotalharga))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelNotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelNotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13)
                .addGap(57, 57, 57))
        );

        getContentPane().add(panelNota, java.awt.BorderLayout.LINE_END);

        jPanel3.setBackground(new java.awt.Color(0, 51, 51));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Total Harga");

        lblTotalHarga.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTotalHarga.setForeground(new java.awt.Color(255, 255, 255));
        lblTotalHarga.setText(":");

        buttonsimpan.setText("SIMPAN");
        buttonsimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonsimpanActionPerformed(evt);
            }
        });

        bayar.setBackground(new java.awt.Color(204, 204, 204));
        bayar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bayarActionPerformed(evt);
            }
        });
        bayar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                bayarKeyReleased(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("JUMLAH BAYAR");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTotalHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 346, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bayar, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonsimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotalHarga)
                    .addComponent(jLabel2)
                    .addComponent(buttonsimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bayar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, java.awt.BorderLayout.PAGE_END);

        jPanel4.setLayout(new java.awt.BorderLayout());

        tblCart.setBackground(new java.awt.Color(0, 102, 102));
        tblCart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NAMA PRODUK", "QTY", "HARGA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCart);

        jPanel4.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel4, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed

        String kode = jTextField1.getText();
        DefaultTableModel model = (DefaultTableModel) tblCart.getModel();
        model.addTableModelListener(new TableModelListener() {
            @Override
            public void tableChanged(TableModelEvent e) {
                int row = e.getFirstRow();
                int column = e.getColumn();
                if (row >= 0 && column >= 0) {
                    updateharga();
                }
            }
        });

        try {
            Connection K = koneksi_database.getConnection();
            System.out.println("Kode produk: " + kode);
            String Q = "SELECT ID_Produk,Nama_Produk,Harga_jual,Stok FROM produk WHERE Kode_Produk='" + kode + "'";
            Statement S = K.createStatement();
            ResultSet R = S.executeQuery(Q);

            System.out.println("Jumlah baris di result set: " + R.getRow());

            boolean produkAda = false; // Flag untuk menandai apakah produk sudah ada di tabel

            if (R.next()) {
                int id = R.getInt("ID_Produk");
                String pName = R.getString("Nama_Produk");
                double pPr = R.getDouble("Harga_jual");
                int pSt = R.getInt("Stok");

                // Periksa apakah produk sudah ada di tabel
                for (int i = 0; i < model.getRowCount(); i++) {
                    if (Integer.parseInt(model.getValueAt(i, 0).toString()) == id) {
                        // Jika produk sudah ada, update quantity
                        int qty = Integer.parseInt(model.getValueAt(i, 2).toString()) + 1;
                        model.setValueAt(qty, i, 2);
                        produkAda = true;
                        break;
                    }
                }

                // Jika produk belum ada, tambahkan baris baru
                if (!produkAda) {
                    Object[] data = {id, pName, 1, pPr};
                    model.addRow(data);
                }
            } else {
                // Jika kode produk tidak ditemukan, tampilkan dialog
                int opsi = JOptionPane.showConfirmDialog(this,
                        "Kode produk tidak ditemukan. Apakah Anda ingin menambahkan produk baru?",
                        "Produk Tidak Ditemukan",
                        JOptionPane.YES_NO_OPTION);

                if (opsi == JOptionPane.YES_OPTION) {
                    // Munculkan Tambah_Produk dan kirimkan kode produk
                    Tambah_Produk_kasir tambahProduk = new Tambah_Produk_kasir(this, true, jTextField1.getText());
                    tambahProduk.setVisible(true);
                }
            }

            updateharga();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }

    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin logout?", "Konfirmasi Logout", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            // Tutup form saat ini
            this.dispose();

            // Tampilkan form login 
            Login_Page loginForm = new Login_Page();
            loginForm.setVisible(true);
            LoginController loginController = new LoginController();
            String username = Login_Page.loggedInUsername; // Ambil username dari objek Profile
            function.Log.savelog("\n User logged out: " + username);
            User user = loginController.getProfil(username);

            if (user != null) {
                function.Log.savelog("\n User logged out information: " + user.toString()); // Gunakan toString() dari objek User
            } else {
                function.Log.savelog("\n User logged out (Profile not found for " + username + ")");
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        int selectedRow = tblCart.getSelectedRow();
        if (selectedRow >= 0) {
            DefaultTableModel model = (DefaultTableModel) tblCart.getModel();
            model.removeRow(selectedRow);
            updateharga(); // Update total harga setelah menghapus barang
        } else {
            JOptionPane.showMessageDialog(this, "Pilih baris yang ingin dihapus.");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        int[] selectedRows = tblCart.getSelectedRows();

        if (selectedRows.length > 0) {
            DefaultTableModel modelCart = (DefaultTableModel) tblCart.getModel();
            DefaultTableModel modelDaftarProduk = (DefaultTableModel) daftarproduk.getModel();
            modelDaftarProduk.addTableModelListener(new TableModelListener() {
                @Override
                public void tableChanged(TableModelEvent e) {
                    int row = e.getFirstRow();
                    int column = e.getColumn();
                    if (row >= 0 && column >= 0) {
                        updateharganota();
                    }
                }
            });

            for (int selectedRow : selectedRows) {
                String idProduk = modelCart.getValueAt(selectedRow, 0).toString(); // Assuming ID is in the first column
                int qty = Integer.parseInt(modelCart.getValueAt(selectedRow, 2).toString()); // Assuming qty is in the third column

                boolean produkAda = false;
                for (int i = 0; i < modelDaftarProduk.getRowCount(); i++) {
                    String idProdukExisting = modelDaftarProduk.getValueAt(i, 0).toString();
                    if (idProduk.equals(idProdukExisting)) {
                        // Produk sudah ada, update qty
                        int qtyExisting = Integer.parseInt(modelDaftarProduk.getValueAt(i, 2).toString());
                        int newQty = qtyExisting + qty;
                        modelDaftarProduk.setValueAt(newQty, i, 2);
                        produkAda = true;
                        updateharganota();
                        break;
                    }
                }

                if (!produkAda) {
                    // Produk belum ada, tambahkan baris baru
                    Object[] rowData = new Object[modelCart.getColumnCount()];
                    for (int col = 0; col < modelCart.getColumnCount(); col++) {
                        rowData[col] = modelCart.getValueAt(selectedRow, col);
                    }
                    modelDaftarProduk.insertRow(0, rowData);
                }
            }
            updateharganota();
        } else {
            JOptionPane.showMessageDialog(this, "Pilih baris yang ingin dipindahkan.");
        }

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Menu_UtamaKasir menu = new Menu_UtamaKasir(user);
        menu.setVisible(true);// TODO add your handling code here:
        this.dispose();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void bayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bayarActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_bayarActionPerformed

    private void bayarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bayarKeyReleased
        // TODO add your handling code here: 
        try {
            long totalHarga = Long.parseLong(notatotalharga.getText().substring(3)); // Mengambil nilai total harga dari notatotalharga, hilangkan "Rp "
            long bayarAmount = Long.parseLong(bayar.getText()); // Mengambil nilai dari bayar
            long kembali = bayarAmount - totalHarga; // Menghitung kembalian
            jLabel6.setText("Rp " + kembali); // Menampilkan kembalian di jLabel6
            jLabel9.setText("Rp " + bayar.getText());
        } catch (NumberFormatException ex) {
            jLabel6.setText("Rp 0"); // Menangani kesalahan jika input tidak valid
        }

    }//GEN-LAST:event_bayarKeyReleased

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:

        int selectedRow = daftarproduk.getSelectedRow();
        if (selectedRow >= 0) {
            DefaultTableModel model = (DefaultTableModel) daftarproduk.getModel();
            model.removeRow(selectedRow);
            updateharganota(); // Update total harga setelah menghapus barang
        } else {
            JOptionPane.showMessageDialog(this, "Pilih baris yang ingin dihapus.");
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void buttonsimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonsimpanActionPerformed
        // TODO add your handling code here:
        try {
            Connection conn = koneksi_database.getConnection();
            conn.setAutoCommit(false);

            RiwayatPenjualanController.simpanDataRiwayatPenjualan(daftarproduk, labelkasir.getText());
            // 1. Ambil data produk dari daftarproduk
            DefaultTableModel model = (DefaultTableModel) daftarproduk.getModel();

            // 2. Hitung total jumlah dan total pendapatan per produk
            Map<String, Integer> jumlahPerProduk = new HashMap<>();
            Map<String, Double> pendapatanPerProduk = new HashMap<>();
            for (int i = 0; i < model.getRowCount(); i++) {
                String namaProduk = model.getValueAt(i, 1).toString();
                int jumlah = Integer.parseInt(model.getValueAt(i, 2).toString());
                double harga = Double.parseDouble(model.getValueAt(i, 3).toString());

                jumlahPerProduk.put(namaProduk, jumlahPerProduk.getOrDefault(namaProduk, 0) + jumlah);
                pendapatanPerProduk.put(namaProduk, pendapatanPerProduk.getOrDefault(namaProduk, 0.0) + (jumlah * harga));
            }

            // 3. Simpan data ke tabel penjualan_produk
            String query = "INSERT INTO penjualan_produk (tanggal, nama_produk, jumlah_terjual, total_pendapatan) "
                    + "VALUES (?, ?, ?, ?)";
            PreparedStatement stmt = conn.prepareStatement(query);
            for (Map.Entry<String, Integer> entry : jumlahPerProduk.entrySet()) {
                String namaProduk = entry.getKey();
                int jumlahTerjual = entry.getValue();
                double totalPendapatan = pendapatanPerProduk.get(namaProduk);

                stmt.setDate(1, new java.sql.Date(new Date().getTime()));
                stmt.setString(2, namaProduk);
                stmt.setInt(3, jumlahTerjual);
                stmt.setDouble(4, totalPendapatan);
                stmt.executeUpdate();
            }

            // 4. Simpan data ke tabel riwayat_penjualan (1 produk 1 baris)
//            String queryRiwayat = "INSERT INTO riwayat_penjualan (tanggal, kasir, nama_produk, total_terjual, total_pendapatan) "
//                    + "VALUES (?, ?, ?, ?, ?)";
//            PreparedStatement stmtRiwayat = conn.prepareStatement(queryRiwayat);
//            for (int i = 0; i < model.getRowCount(); i++) {
//                String namaProduk = model.getValueAt(i, 1).toString(); // Kolom 1: nama produk
//                int jumlahTerjual = Integer.parseInt(model.getValueAt(i, 2).toString()); // Kolom 2: jumlah
//                double totalPendapatan = Double.parseDouble(model.getValueAt(i, 3).toString()) * jumlahTerjual; // Kolom 3: harga
//
//                stmtRiwayat.setDate(1, new java.sql.Date(new Date().getTime())); // Tanggal hari ini
//                stmtRiwayat.setString(2, labelkasir.getText()); // Ambil nama kasir dari labelkasir
//                stmtRiwayat.setString(3, namaProduk);
//                stmtRiwayat.setInt(4, jumlahTerjual);
//                stmtRiwayat.setDouble(5, totalPendapatan);
//                stmtRiwayat.executeUpdate();
//            }
//            
            conn.commit();

            conn.close();

            // 5. Simpan data laporan keuangan ke tabel laporan_keuangan
            String kasir = labelkasir.getText();
            double totalPemasukan = Double.parseDouble(notatotalharga.getText().substring(3));
            LaporanController.simpanDataLaporan(kasir, totalPemasukan, daftarproduk);

            // --- Simpan PDF ---
            // 1. Buat nama file unik berdasarkan tanggal dan waktu
            SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMddHHmmss");
            String timestamp = sdf.format(new Date());
            String fileName = "nota_" + timestamp + ".pdf";

            // 2. Buat dokumen PDF dengan nama file yang unik
            com.itextpdf.text.Document document = new com.itextpdf.text.Document();
            PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("src/doc/" + fileName));
            document.open();

            // 2. Tambahkan konten dari panelNota ke PDF
            PdfContentByte cb = writer.getDirectContent();
            PdfTemplate tp = cb.createTemplate(panelNota.getWidth(), panelNota.getHeight());
            Graphics2D g2 = tp.createGraphics(panelNota.getWidth(), panelNota.getHeight());
            panelNota.print(g2);
            g2.dispose();
            cb.addTemplate(tp, 50, -50);  // Sesuaikan posisi jika perlu

            // 3. Tutup dokumen
            document.close();

            // Tampilkan pesan dengan nama file
            JOptionPane.showMessageDialog(this, "Nota dan data penjualan berhasil disimpan!\nNama file: " + fileName);

        } catch (SQLException | FileNotFoundException | DocumentException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
            // ... (error handling, rollback transaksi jika perlu) ...
        }


    }//GEN-LAST:event_buttonsimpanActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblCart.getModel();
        model.setRowCount(0);
        updateharga(); // 
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        Laporan_Keuangan_kasir laporan = new Laporan_Keuangan_kasir();
        laporan.setVisible(true);// TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Kasir_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Kasir_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Kasir_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Kasir_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Kasir_Page().setVisible(true);
//            }
//        });
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Kasir_PageOLD().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bayar;
    private javax.swing.JButton buttonsimpan;
    private javax.swing.JTable daftarproduk;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel labelkasir;
    private javax.swing.JLabel labeltotalharga;
    private javax.swing.JLabel lblTotalHarga;
    private javax.swing.JLabel notatotalharga;
    private javax.swing.JPanel panelNota;
    private javax.swing.JTable tblCart;
    // End of variables declaration//GEN-END:variables

    private void updateharga() {
        try {
            double totalHarga = 0;
            int rowcount = tblCart.getRowCount();
            for (int i = 0; i < rowcount; i++) {
                double QTY = Double.parseDouble(tblCart.getValueAt(i, 2).toString());
                double PRC = Double.parseDouble(tblCart.getValueAt(i, 3).toString());
                totalHarga += (QTY * PRC);
            }
            lblTotalHarga.setText("Rp " + (long) totalHarga);
        } catch (NumberFormatException e) {
        }
    }

    private void updateharganota() {
        try {
            double totalHarga = 0;
            int rowcount = daftarproduk.getRowCount();
            for (int i = 0; i < rowcount; i++) {
                double QTY = Double.parseDouble(daftarproduk.getValueAt(i, 2).toString());
                double PRC = Double.parseDouble(daftarproduk.getValueAt(i, 3).toString());
                totalHarga += (QTY * PRC);
            }
            notatotalharga.setText("Rp " + (long) totalHarga);
        } catch (NumberFormatException e) {
        }
    }

}
